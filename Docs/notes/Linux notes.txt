# Reset linker cache
	sudo ldconfig -v command

# To upgrade your GCC version to one that supports C++17 on the Jetson Nano, you can follow these steps. 
# These instructions will guide you through installing GCC 9, which includes full support for C++17 features, 
# including the filesystem library.

Step 1: Add the Toolchain PPA Repository (First, you need to add the repository that contains the newer versions of GCC)
	sudo add-apt-repository ppa:ubuntu-toolchain-r/test
	sudo apt-get update
Step 2: Install CC 9 and G++ 9:
	sudo apt-get install gcc-9 g++-9
Step 3: Set GCC 9 as the Default Compiler
	sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9
	sudo update-alternatives --config gcc
	Select GCC 9 from the list that appears.
Step 4: Verify the GCC Version
	gcc --version
	
# Remove old version of cmake and install a newer one
	sudo apt-get remove cmake  # or your package manager's equivalent command

# Replace <version> with the version number you downloaded
	wget https://cmake.org/files/v3.28/cmake-3.28.0-linux-aarch64.sh
	chmod +x cmake-3.28.0-linux-aarch64.sh
	sudo ./cmake-3.28.0-linux-aarch64.sh --prefix=/usr/local --exclude-subdir

# After an issue with installing vcpkg I upgraded from GCC 7.5 to 8.4
# Error
	vcpkg error [138/212] Building CXX object CMakeFil...glib.dir/src/vcpkg/export.prefab.cpp.o ninja: build stopped: subcommand failed.

#Solution found at https://github.com/microsoft/vcpkg/issues/22533 comment by MarcelNehring
	sudo apt-get install gcc-8 g++-8 # install GCC 8

	sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 # set the version of gcc (or add it to alternatives?)
	sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100 # set the version of g++

# Check available gcc or g++ versions
	update-alternatives --list gcc
	update-alternatives --list g++

# This will make the list appear and the prompt will ask you to choose which one you want
	sudo update-alternatives --config gcc
	sudo update-alternatives --config g++

# Message at end of vcpkg build
	Environment variable VCPKG_FORCE_SYSTEM_BINARIES must be set on arm, s390x, ppc64le and riscv platforms.

# Maybe resolved with
	export VCPKG_FORCE_SYSTEM_BINARIES=1

# Or if you want to make it persistent for the session:
	echo 'export VCPKG_FORCE_SYSTEM_BINARIES=1' >> ~/.bashrc
	source ~/.bashrc

# This should resolve the message you are seeing during the Vcpkg build process. If you face any further issues or have additional questions, feel free to ask!

# Have to install python version later than 3.7
	sudo apt-get install python3.8
	which python3.8
	sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1
	sudo update-alternatives --config python

# OR

# Add configuration for python3 command as opposed to just python
	sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1
	sudo update-alternatives --config python3
	python --version

# PR by Cheney-W might help with installation of pangol using vcpkg
	https://github.com/microsoft/vcpkg/issues/33052

